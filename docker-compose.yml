version: '3.2'
services:


### prometheus + sidecars
#oldver 2.25.2
  prometheus_snmp:
    image: prom/prometheus:v2.30.3
    container_name: prometheus_snmp
    user: root
    volumes:
      - ./prometheus:/etc/config/
      - ./data/prometheus/snmp:/data
    command:
      - '--log.level=debug'
      - '--config.file=/etc/config/prometheus_snmp.yml'
      - '--storage.tsdb.path=/data'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=180d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--web.listen-address=:9001'
      - "--web.external-url=http://mon.private.com:9001"
      - '--storage.tsdb.min-block-duration=5m'
      - '--storage.tsdb.max-block-duration=5m'
    restart: always
    expose:
      - 9001
    ports:
      - "9001:9001"

  thanos_sidecar_snmp:
    restart: always
    build:
      context: ./thanos
      dockerfile: Dockerfile.thanos
    container_name: thanos_sidecar_snmp
    volumes:
      - ./prometheus:/etc/config/
      - ./data/prometheus/snmp:/data
    command:
      - "/wait-for-it.sh"
      - "prometheus_snmp:9001"
      - "--"
      - "/thanos"
      - "sidecar"
      - "--log.level=info"
      - "--tsdb.path=/data"
      - "--prometheus.url=http://prometheus_snmp:9001"
      - "--reloader.config-file=/etc/config/prometheus_snmp.yml"
      - |
          --objstore.config=type: S3
          config: 
            bucket: thanos-snmp1
            access_key: secret
            secret_key: secret
            endpoint: objects.privatehost.com:80
            insecure: true
    expose:
      - 10902
      - 10901

  prometheus_ceph:
    image: prom/prometheus:v2.28.1
    container_name: prometheus_ceph
    user: root
    volumes:
      - ./prometheus:/etc/config/
      - ./data/prometheus/ceph:/data
    command:
      - '--config.file=/etc/config/prometheus_ceph.yml'
      - '--storage.tsdb.path=/data'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=180d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--web.listen-address=:9001'
      - "--web.external-url=http://mon.private.com:9002"
      - '--storage.tsdb.min-block-duration=2h'
      - '--storage.tsdb.max-block-duration=2h'
    restart: always
    expose:
      - 9001
    ports:
      - "9002:9001"

  thanos_sidecar_ceph:
    restart: always
    build:
      context: ./thanos
      dockerfile: Dockerfile.thanos
    container_name: thanos_sidecar_ceph
    volumes:
      - ./prometheus:/etc/config/
      - ./data/prometheus/ceph:/data
    command:
      - "/wait-for-it.sh"
      - "prometheus_ceph:9001"
      - "--"
      - "/thanos"
      - "sidecar"
      - "--log.level=error"
      - "--tsdb.path=/data"
      - "--prometheus.url=http://prometheus_ceph:9001"
      - "--reloader.config-file=/etc/config/prometheus_ceph.yml"
      - |
          --objstore.config=type: S3
          config: 
            bucket: thanos-ceph1
            access_key: secret
            secret_key: secret
            endpoint: objects.privatehost.com:80
            insecure: true
    expose:
      - 10902
      - 10901
#  thanos_sidecar_ceph2:
#    build:
#      context: ./thanos
#      dockerfile: Dockerfile.thanos
#    container_name: thanos_sidecar_ceph2
#    volumes:
#      - ./prometheus:/etc/config/
#      - ./data/prometheus/ceph:/data
#    command:
#      - "/wait-for-it.sh"
#      - "prometheus_ceph:9001"
#      - "--"
#      - "/thanos"
#      - "sidecar"
#      - "--log.level=debug"
#      - "--tsdb.path=/data"
#      - "--prometheus.url=http://prometheus_ceph:9001"
#      - "--reloader.config-file=/etc/config/prometheus_ceph.yml"
#      - |
#          --objstore.config=type: S3
#          config: 
#            bucket: thanos-ceph2
#            access_key: secret
#            secret_key: secret
#            endpoint: objects.privatehost.com:80
#            insecure: true
#    expose:
#      - 10902
#      - 10901

  prometheus_other:
    image: prom/prometheus:v2.30.3
    container_name: prometheus_other
    user: root
    volumes:
      - ./prometheus:/etc/config/
      - ./data/prometheus/other:/data
    command:
      - '--config.file=/etc/config/prometheus_other.yml'
      - '--storage.tsdb.path=/data'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=180d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--web.listen-address=:9001'
      - "--web.external-url=http://mon.private.com:9003"
      - '--storage.tsdb.min-block-duration=5m'
      - '--storage.tsdb.max-block-duration=5m'
    restart: always
    expose:
      - 9001
    ports:
      - "9003:9001"

  thanos_sidecar_other:
    restart: always
    build:
      context: ./thanos
      dockerfile: Dockerfile.thanos
    container_name: thanos_sidecar_other
    volumes:
      - ./prometheus:/etc/config/
      - ./data/prometheus/other:/data
    command:
      - "/wait-for-it.sh"
      - "prometheus_other:9001"
      - "--"
      - "/thanos"
      - "sidecar"
      - "--log.level=error"
      - "--tsdb.path=/data"
      - "--prometheus.url=http://prometheus_other:9001"
      - "--reloader.config-file=/etc/config/prometheus_other.yml"
      - |
          --objstore.config=type: S3
          config: 
            bucket: thanos-other1
            access_key: secret
            secret_key: secret
            endpoint: objects.privatehost.com:80
            insecure: true
    expose:
      - 10902
      - 10901
  prometheus_selfmon:
    image: prom/prometheus:v2.30.3
    container_name: prometheus_selfmon
    user: root
    volumes:
      - ./prometheus:/etc/config/
      - ./data/prometheus/selfmon:/data
    command:
      - '--config.file=/etc/config/prometheus_selfmon.yml'
      - '--storage.tsdb.path=/data'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=180d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--web.listen-address=:9001'
      - "--web.external-url=http://mon.private.com:9004"
      - '--storage.tsdb.min-block-duration=5m'
      - '--storage.tsdb.max-block-duration=5m'
    restart: always
    expose:
      - 9001
    ports:
      - "9004:9001"

  thanos_sidecar_selfmon:
    restart: always
    build:
      context: ./thanos
      dockerfile: Dockerfile.thanos
    container_name: thanos_sidecar_selfmon
    volumes:
      - ./prometheus:/etc/config/
      - ./data/prometheus/selfmon:/data
    command:
      - "/wait-for-it.sh"
      - "prometheus_selfmon:9001"
      - "--"
      - "/thanos"
      - "sidecar"
      - "--log.level=error"
      - "--tsdb.path=/data"
      - "--prometheus.url=http://prometheus_selfmon:9001"
      - "--reloader.config-file=/etc/config/prometheus_selfmon.yml"
    expose:
      - 10902
      - 10901
### front-end components
  grafana:
    image: "grafana/grafana"
    container_name: grafana2
    user: root
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: always
    ports:
      - "3000:3000"
    volumes:
    - './data/grafana/varlib/_data:/var/lib/grafana'
    - './data/grafana/etc:/etc/grafana'
    - './data/grafana/log:/var/log/grafana'
    environment:
      GF_RENDERING_SERVER_URL: http://grafrender2:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana2:3000/
      GF_LOG_FILTERS: rendering:debug
  #      GF_LOG_LEVEL: debug
  grafrender:
    image: "grafana/grafana-image-renderer"
    container_name: grafrender2
    restart: always
  #    ports:
  #    - "8082:8081"
    environment:
    - BROWSER_TZ=America/Detroit
    - IGNORE_HTTPS_ERRORS=true
    - ENABLE_METRICS=true
    - LOG_LEVEL=info



  thanos_querier:
    restart: always
    build:
      context: ./thanos
      dockerfile: Dockerfile.thanos
    container_name: thanos_querier
    command:
      - "/wait-for-it.sh"
      - "thanos_sidecar_snmp:10901"
      - "--"
      - "/thanos"
      - "query"
      - "--log.level=error"
      - "--log.format=logfmt"
#      - "--store=thanos_sidecar_snmp:10901"
#      - "--store=thanos_sidecar_ceph:10901"
#      - "--store=thanos_sidecar_other:10901"
      - "--store=thanos_sidecar_selfmon:10901"
      - "--store=thanos_store_snmp:10901"
      - "--store=thanos_store_ceph:10901"
      - "--store=thanos_store_other:10901"
      # - "--store=thanos_rule:10901"
      - "--store.sd-interval=5m"
      - "--query.auto-downsampling"
      - "--query.partial-response"
    expose:
      - 10902
      - 10901
  #keep closed for security
    ports:
      - "10902:10902"

  thanos_query_frontend:
    restart: always
    build:
      context: ./thanos
      dockerfile: Dockerfile.thanos
    container_name: thanos_query_frontend
    command:
      - "/wait-for-it.sh"
      - "thanos_querier:10901"
      - "--"
      - "/thanos"
      - "query-frontend"
      - "--log.level=error"
      - "--log.format=logfmt"
      - "--http-address=0.0.0.0:19090"
      - "--query-frontend.compress-responses"
      - "--query-range.partial-response"
      - "--query-frontend.downstream-url=http://thanos_querier:10902"
      - "--query-range.split-interval=24h"
      - "--query-range.max-retries-per-request=5"
      - "--query-frontend.log-queries-longer-than=5s"
      - "--cache-compression-type=snappy"
  #keep closed for security
    ports:
      - "19090:19090"
    depends_on:
      - thanos_querier


### thanos back-end
  thanos_compactor_snmp:
    restart: always
    container_name: thanos_compactor_snmp
    build:
      context: ./thanos
      dockerfile: Dockerfile.thanos
    volumes:
      - ./data/compactor/snmp:/data
    command:
      - "/wait-for-it.sh"
      - "objects.privatehost.com:80"
      - "--"
      - "/thanos"
      - "compact"
      - "--log.level=info"
      - "--log.format=logfmt"
      - |
        --objstore.config=type: S3
        config: 
            bucket: thanos-snmp1
            access_key: secret
            secret_key: secret
            endpoint: objects.privatehost.com:80
            insecure: true
      - "--data-dir=/data"
      - "--consistency-delay=30m"
      - "--retention.resolution-raw=180d"
      - "--retention.resolution-5m=365d"
      - "--retention.resolution-1h=0d"
      - "--block-sync-concurrency=4"
      - "--compact.concurrency=1"
      - "--delete-delay=15m"
      - "--wait"
      - "--wait-interval=3m"
    expose:
      - 10902
      - 10901


  thanos_store_snmp:
    container_name: thanos_store_snmp
    build:
      context: ./thanos
      dockerfile: Dockerfile.thanos
    volumes:
      - ./data/store:/data
    command:
      - "/wait-for-it.sh"
      - "objects.privatehost.com:80"
      - "--"
      - "/thanos"
      - "store"
      - "--log.level=error"
      - |
        --objstore.config=type: S3
        config: 
            bucket: thanos-snmp1
            access_key: secret
            secret_key: secret
            endpoint: objects.privatehost.com:80
            insecure: true
      - "--data-dir=/data"
      - "--log.format=logfmt"
      - "--index-cache-size=512MB"
      - "--chunk-pool-size=4GB"
      - "--store.grpc.series-max-concurrency=20"
      - "--sync-block-duration=3m"
      - "--block-sync-concurrency=20"
    restart: always
    expose:
      - 10902
      - 10901
  thanos_compactor_ceph:
    restart: always
    container_name: thanos_compactor_ceph
    build:
      context: ./thanos
      dockerfile: Dockerfile.thanos
    volumes:
      - ./data/compactor/ceph:/data
    command:
      - "/wait-for-it.sh"
      - "objects.privatehost.com:80"
      - "--"
      - "/thanos"
      - "compact"
      - "--log.level=info"
      - "--log.format=logfmt"
      - |
        --objstore.config=type: S3
        config: 
            bucket: thanos-ceph1
            access_key: secret
            secret_key: secret
            endpoint: objects.privatehost.com:80
            insecure: true
      - "--data-dir=/data"
      - "--consistency-delay=30m"
      - "--retention.resolution-raw=180d"
      - "--retention.resolution-5m=365d"
      - "--retention.resolution-1h=0d"
      - "--block-sync-concurrency=4"
      - "--compact.concurrency=1"
      - "--delete-delay=15m"
      - "--wait"
      - "--wait-interval=3m"
    expose:
      - 10902
      - 10901


  thanos_store_ceph:
    container_name: thanos_store_ceph
    build:
      context: ./thanos
      dockerfile: Dockerfile.thanos
    volumes:
      - ./data/store:/data
    command:
      - "/wait-for-it.sh"
      - "objects.privatehost.com:80"
      - "--"
      - "/thanos"
      - "store"
      - "--log.level=error"
      - |
        --objstore.config=type: S3
        config: 
            bucket: thanos-ceph1
            access_key: secret
            secret_key: secret
            endpoint: objects.privatehost.com:80
            insecure: true
      - "--data-dir=/data"
      - "--log.format=logfmt"
      - "--index-cache-size=512MB"
      - "--chunk-pool-size=4GB"
      - "--store.grpc.series-max-concurrency=20"
      - "--sync-block-duration=3m"
      - "--block-sync-concurrency=20"
    restart: always
    expose:
      - 10902
      - 10901
  thanos_compactor_other:
    restart: always
    container_name: thanos_compactor_other
    build:
      context: ./thanos
      dockerfile: Dockerfile.thanos
    volumes:
      - ./data/compactor/other:/data
    command:
      - "/wait-for-it.sh"
      - "objects.privatehost.com:80"
      - "--"
      - "/thanos"
      - "compact"
      - "--log.level=info"
      - "--log.format=logfmt"
      - |
        --objstore.config=type: S3
        config: 
            bucket: thanos-other1
            access_key: secret
            secret_key: secret
            endpoint: objects.privatehost.com:80
            insecure: true
      - "--data-dir=/data"
      - "--consistency-delay=30m"
      - "--retention.resolution-raw=180d"
      - "--retention.resolution-5m=365d"
      - "--retention.resolution-1h=0d"
      - "--block-sync-concurrency=4"
      - "--compact.concurrency=1"
      - "--delete-delay=15m"
      - "--wait"
      - "--wait-interval=3m"
    expose:
      - 10902
      - 10901


  thanos_store_other:
    container_name: thanos_store_other
    build:
      context: ./thanos
      dockerfile: Dockerfile.thanos
    volumes:
      - ./data/store:/data
    command:
      - "/wait-for-it.sh"
      - "objects.privatehost.com:80"
      - "--"
      - "/thanos"
      - "store"
      - "--log.level=error"
      - |
        --objstore.config=type: S3
        config: 
            bucket: thanos-other1
            access_key: secret
            secret_key: secret
            endpoint: objects.privatehost.com:80
            insecure: true
      - "--data-dir=/data"
      - "--log.format=logfmt"
      - "--index-cache-size=512MB"
      - "--chunk-pool-size=4GB"
      - "--store.grpc.series-max-concurrency=20"
      - "--sync-block-duration=3m"
      - "--block-sync-concurrency=20"
    restart: always
    expose:
      - 10902
      - 10901

### alert components
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    user: root
    volumes:
      - ./prometheus:/etc/config/
      - ./data/prometheus/alertmanager:/data
    command:
      - '--config.file=/etc/config/alertmanager.yml'
      - "--web.external-url=http://mon.private.com:9093"
    restart: always
    expose:
      - 9093
    ports:
       - "9093:9093"
  webhook-logger:
    restart: always
    build:
      context: ./webhook/alertmanager-webhook-logger
      dockerfile: Dockerfile
    container_name: webhook-logger
#    volumes:
#      - ./prometheus:/etc/config/
    command:
      - "/wait-for-it.sh"
    expose:
      - 6725
